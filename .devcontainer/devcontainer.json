// Update the VARIANT arg in docker-compose.yml to pick a Node.js version: 10, 12, 14 
{
	"name": "React+Express and PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",

	// Set env. variable
	"remoteEnv": {
		"PGHOST" : "db",
		"PGPORT" : "5432",
		"PGDB" : "postgres",
		"PGUSER" : "postgres",
		"PGPASSWORD" : "postgres",
		"PGUSESSL" : "false",
		"NODE_ENV" : "development"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"sqltools.connections": [{
			"name": "Container database",
			"driver": "PostgreSQL",
			"previewLimit": 50,
			"server": "localhost",
			"port": 5432,
			"database": "postgres",
			"username": "postgres",
			"password": "postgres"
		}],
		"yaml.schemas": {
			"https://json.schemastore.org/github-workflow": ["/.github/workflows/*"]
		}
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"dbaeumer.vscode-eslint",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg",
		"ms-azuretools.vscode-bicep",
		"redhat.vscode-yaml",
		"ms-kubernetes-tools.porter-vscode",
		"ms-azuretools.vscode-azurefunctions",
		"ms-dotnettools.csharp",
		"humao.rest-client"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [7071],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "make init",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
